:root {
  --max-width: 1100px;
  --gap: 18px;
  --muted: #666;
  /* default input font sizing so adornments can match inputs exactly */
  --input-font-size: 1rem;
  --input-line-height: 1.2;
}

body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  max-width: var(--max-width);
  margin: 24px auto;
  padding: 20px;
  box-sizing: border-box;
  color: #222;
}

/* Main responsive grid: form + scenarios */
.main-grid {
  display: grid;
  grid-template-columns: 1fr;
  /* single column: form on top, scenarios below */
  gap: var(--gap);
  align-items: start;
}

#form {
  background: #fff;
  border: 1px solid #e6e6e6;
  border-radius: 8px;
  padding: 16px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);
}

label {
  display: block;
  margin-top: 12px;
  font-size: 0.95rem
}

input,
select,
button {
  font-family: inherit
}

input {
  width: 100%;
  /* use variable so adornments can match this value */
  font-size: var(--input-font-size);
  line-height: var(--input-line-height);
  padding: 8px 10px;
  margin-top: 6px;
  box-sizing: border-box;
  border: 1px solid #ddd;
  border-radius: 6px;
}

.term-button {
  padding: 8px 10px;
  border-radius: 6px;
  border: 1px solid #ccc;
  background: #f5f5f5;
  cursor: pointer;
}

.term-button.selected {
  background: #0078d4;
  color: white;
  border-color: #0064b0;
}

/* Make term buttons span the form and each take ~50% width */
.term-options {
  display: flex;
  gap: 8px;
  width: 100%;
  margin-top: 6px;
}

.term-options .term-button {
  flex: 1 1 50%; /* grow equally, base 50% */
  min-width: 0;   /* allow shrinking in tight spaces */
  padding: 12px 10px;
  box-sizing: border-box;
  font-size: 1rem;
}

input[type='number'] {
  -moz-appearance: textfield;
  -webkit-appearance: textfield;
  appearance: textfield
}

.button-row {
  display: flex;
  gap: 10px;
  margin-top: 14px
}

.button-row button {
  padding: 10px 12px;
  border-radius: 6px;
  border: 1px solid #ccc;
  background: #f5f5f5
}

.button-row button:active {
  transform: translateY(1px)
}

#result {
  margin-top: 12px;
  font-size: 1.05rem;
  font-weight: 600
}

.scenarios {
  background: #fff;
  border: 1px solid #e6e6e6;
  border-radius: 8px;
  padding: 12px
}

/* allow horizontal scrolling for wide tables so cell content remains readable on small screens */
.scenarios {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 8px;
  table-layout: auto
}

/* ensure table can grow to its content and be scrolled horizontally when needed */
.scenarios table {
  min-width: max-content
}

th,
td {
  border: 1px solid #eef0f2;
  padding: 8px;
  text-align: center;
  font-size: 0.92rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis
}

th {
  background: #fafafa;
  font-weight: 600
}

.sort-indicator {
  font-size: 0.8em;
  color: var(--muted)
}

.delete-btn {
  color: #fff;
  background: #e74c3c;
  border: none;
  padding: 6px 8px;
  cursor: pointer;
  border-radius: 6px
}

/* dollar and percent adornments target form input containers only */
.dollar {
  position: relative;
  display: block
}

.dollar>input {
  padding-left: 28px
}

.dollar::before {
  content: "$";
  position: absolute;
  left: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  /* match the input text exactly */
  font: inherit;
  font-size: var(--input-font-size);
  line-height: var(--input-line-height);
  color: currentColor;
  /* same color as input text */
}

.percent {
  position: relative;
  display: block
}

.percent>input {
  padding-right: 28px
}

.percent::after {
  content: "%";
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  /* match the input text exactly */
  font: inherit;
  font-size: var(--input-font-size);
  line-height: var(--input-line-height);
  color: currentColor;
  /* same color as input text */
}

/* Mobile: stack grid and convert table rows into cards to avoid horizontal scroll */
/* keep single-column layout across screen sizes so scenarios always appear under the form */

/* Enlarge form controls for mobile/tablet widths (<= 768px) â€” DOES NOT change table layout */
@media (max-width: 768px) {
  #form label {
    font-size: 1.15rem;
  }

  /* bump the input font-size via variable so adornments follow automatically */
  #form {
    --input-font-size: 1.1rem;
    --input-line-height: 1.2;
  }

  #form input,
  #form select {
    padding: 14px 12px;
  }

  .button-row button {
    padding: 14px 16px;
    font-size: 1.06rem;
  }

  #form #result {
    font-size: 1.2rem;
  }

  /* increase padding so $ and % adornments do not overlap larger input text */
  #form .dollar>input {
    padding-left: 25px;
  }

  #form .percent>input {
    padding-right: 44px;
  }
}

/* Keep table as traditional rows on all screen sizes. If you want a card layout for very small phones, I can add it back under a chosen breakpoint. */

/* small polish: ensure no horizontal overflow */
html,
body {
  overflow-x: hidden
}